---
## install and configure frontend machine
- name: install debian packages
  apt: name={{item}} state=present
  with_items:
    - opennebula
    - opennebula-common
    - opennebula-node
    - opennebula-ozones
    - opennebula-sunstone
    - opennebula-tools
    - ruby-opennebula

- name: install dependancies
  apt: name=$item state=present
  with_items:
    - make
    - gcc
    - g++
    - libsqlite3-dev
    - libcurl4-openssl-dev
    - libmysqlclient-dev
    - rake
    - libxml2-dev
    - libxslt1-dev
    - nfs-kernel-server
    - qemu-utils

- name: install ruby dependancies
  gem: name=$item state=present
  with_items:
    - sqlite3
    - amazon-ec2
    - curb
    - mysql
    - net-ldap

- name: create db {{opennebula_db}}
  action: mysql_db db={{opennebula_db}} state=present

# usernames and passwords should be included from a file outside of this git-repo, for now this is developmental.
- name: create user '{{opennebula_db_user}}' with password '{{opennebula_db_pass}}' for '{{opennebula_db}}' and grant all priveleges
  action: mysql_user state=present name={{opennebula_db_user}} password={{opennebula_db_pass}} priv={{opennebula_db}}.*:ALL

- name: copy ceph scripts
  copy: src=files/opennebula4.0-rbd-format2-transfer-datastore-drivers-v4.tar.gz dest=/tmp/opennebula4.0-rbd-format2-transfer-datastore-drivers-v4.tar.gz

- name: unpack ceph scripts
  command: chdir=/tmp tar xf opennebula4.0-rbd-format2-transfer-datastore-drivers-v4.tar.gz

- name: copy datastore scripts in place
  command: cp -rf /tmp/remotes/datastore/ceph /var/lib/one/remotes/datastore/

- name: copy tm scripts in place
  command: cp -rf /tmp/remotes/tm/ceph /var/lib/one/remotes/tm/

- name: copy oned.conf
  template: src=oned.conf dest=/etc/one/oned.conf
  notify:
    - restart oned
  tags:
    - config

- name: start opennebula
  service: name=opennebula state=started enabled=yes

- name: install sunstone configruation
  template: src=sunstone-server.conf dest=/etc/one/sunstone-server.conf
  notify:
    - restart sunstone

- name: start sunstone
  service: name=opennebula-sunstone state=started enabled=yes

## generate public/private keys, this should be shared across the ONE frontend and nodes in the oneadmin account
- name: Generate_keys for oneadmin
  user: name=oneadmin generate_ssh_key=yes

- name: Fetch generated public key from frontend oneadmin account
  fetch: src=$item dest=private/ flat=yes
  with_items:
    - /var/lib/one/.ssh/id_rsa.pub
    - /var/lib/one/.ssh/id_rsa
    - /var/lib/one/.one/one_auth

- name: Install insecure config for oneadmin
  action: copy src=files/insecure_config dest=/var/lib/one/.ssh/config owner=oneadmin group=cloud mode=0600
